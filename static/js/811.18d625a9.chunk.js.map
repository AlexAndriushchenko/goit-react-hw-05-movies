{"version":3,"file":"static/js/811.18d625a9.chunk.js","mappings":"iQAEaA,E,OAAWC,GAAAA,GAAH,8H,SCoDrB,EAjDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,+GAEuBC,EAAAA,EAAAA,oBAA+BN,GAFtD,OAEUG,EAFV,OAGUI,EAASJ,EAAKK,OAAS,GAAKL,EAAKM,MAAM,EAAG,IAAMN,EACtDC,EAAQG,GAJZ,gDAMIG,QAAQC,IAAR,MANJ,0DAHc,0DACdC,EAWD,GAAE,CAACZ,IAECG,GAGH,SAACL,EAAD,UACGK,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,cAAhC,OACR,2BACE,gBACEC,IACEH,EAzBY,kCA0BaA,EAzBb,oDA4BdI,IAAKF,EACLG,MAAM,QACNC,OAAO,WAET,wBACE,0BAAOJ,OAET,wCACa,0BAAOD,SAfbF,EADD,MAJI,IA0BnB,C,0UClDKQ,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,OAAAA,eAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MACO,qFACC,kFACS,uEACF,iEACW,2DACZ,6DACC,aAmEnB,OAnEmB,yC,mCAInB,6FACQC,EADR,kBACiBC,KADjB,sBACkCA,KADlC,yBAI2BC,EAAAA,EAAAA,IAAUF,EAAK,CACpCG,OAAQ,CACNC,SAAQ,OAACH,KAAF,SANf,cAIUI,EAJV,yBAUWA,EAASC,KAAKC,SAVzB,gCAYIpB,QAAQqB,MAAR,MAZJ,2G,IAAA,6DAgBA,WAAmBC,GAAnB,gFACQT,EADR,kBACiBC,KADjB,sBACkCA,KADlC,yBAI2BC,EAAAA,EAAAA,IAAUF,EAAK,CACpCG,OAAQ,CACNC,SAAQ,OAACH,KAAF,MACPQ,MAAOA,EACPC,KAAM,KARd,cAIUL,EAJV,yBAWWA,EAASC,KAAKC,SAXzB,gCAaIpB,QAAQqB,MAAR,MAbJ,4GAhBA,IAgBA,oEAiBA,WAA0B/B,GAA1B,gFACQuB,EADR,kBACiBC,KADjB,sBAEIA,KAFJ,cAGKxB,GAHL,kBAM2ByB,EAAAA,EAAAA,IAAUF,EAAK,CACpCG,OAAQ,CAAEC,SAAQ,OAACH,KAAF,SAPvB,cAMUI,EANV,yBASWA,EAASC,MATpB,gCAWInB,QAAQqB,MAAR,MAXJ,4GAjBA,IAiBA,oEAeA,WAA0B/B,GAA1B,gFACQuB,EADR,kBACiBC,KADjB,sBAEIA,KAFJ,cAGKxB,GAHL,eAGewB,KAHf,yBAM2BC,EAAAA,EAAAA,IAAUF,EAAK,CACpCG,OAAQ,CAAEC,SAAQ,OAACH,KAAF,SAPvB,cAMUI,EANV,yBASWA,EAASC,KAAK1B,MATzB,gCAWIO,QAAQqB,MAAR,MAXJ,4GAfA,IAeA,oEAeA,WAA0B/B,GAA1B,gFACQuB,EADR,kBACiBC,KADjB,sBAEIA,KAFJ,cAGKxB,GAHL,eAGewB,KAHf,yBAM2BC,EAAAA,EAAAA,IAAUF,EAAK,CACpCG,OAAQ,CACNC,SAAQ,OAACH,KAAF,MACPS,KAAM,KATd,cAMUL,EANV,yBAYWA,EAASC,KAAKC,SAZzB,gCAcIpB,QAAQqB,MAAR,MAdJ,4GAfA,MAeA,EA1EIT,GA6FOhB,EAAa,IAAIgB,C","sources":["pages/MovieDetails/Cast/Cast.styled.js","pages/MovieDetails/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n\n  li {\n    list-style-type: none;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiService } from 'services/Api';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  const IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\n  const FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;\n\n  useEffect(() => {\n    getMovieCast();\n\n    async function getMovieCast() {\n      try {\n        const cast = await apiService.getMovieCreditsById(movieId);\n        const actors = cast.length > 20 ? cast.slice(0, 20) : cast;\n        setCast(actors);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [movieId]);\n\n  if (!cast) return null;\n\n  return (\n    <CastList>\n      {cast.map(({ id, profile_path, character, original_name }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? IMAGE_BASE_API_URL + profile_path\n                : FALLBACK_IMAGE_URL\n            }\n            alt={original_name}\n            width=\"100px\"\n            height=\"150px\"\n          />\n          <p>\n            <span>{original_name}</span>\n          </p>\n          <p>\n            character: <span>{character}</span>\n          </p>\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nclass Api {\n  #API_KEY = '9c2993dc2441e19b5ee9fa98ee7764c5';\n  #BASE_URL = 'https://api.themoviedb.org/3/';\n  #TRENDING_PATH_URL = 'trending/movie/day';\n  #SEARCH_PATH_URL = 'search/movie';\n  #GET_MOVIE_DETAILS_PATH_URL = 'movie/';\n  #GET_CREDIT_URL = '/credits';\n  #GET_REVIEWS_URL = '/reviews';\n  // #IMAGE_BASE_API_URL = `https://image.tmdb.org/t/p/w500`;\n  // #FALLBACK_IMAGE_URL = `https://i.postimg.cc/htSNfpBY/movie-card-plug.jpg`;\n\n  async getTrendingMovies() {\n    const url = `${this.#BASE_URL}${this.#TRENDING_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: {\n          api_key: this.#API_KEY,\n        },\n      });\n\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async searchByWord(query) {\n    const url = `${this.#BASE_URL}${this.#SEARCH_PATH_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: {\n          api_key: this.#API_KEY,\n          query: query,\n          page: 1,\n        },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieDetailsById(movieId) {\n    const url = `${this.#BASE_URL}${\n      this.#GET_MOVIE_DETAILS_PATH_URL\n    }${movieId}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { api_key: this.#API_KEY },\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieCreditsById(movieId) {\n    const url = `${this.#BASE_URL}${\n      this.#GET_MOVIE_DETAILS_PATH_URL\n    }${movieId}${this.#GET_CREDIT_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: { api_key: this.#API_KEY },\n      });\n      return response.data.cast;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieReviewsById(movieId) {\n    const url = `${this.#BASE_URL}${\n      this.#GET_MOVIE_DETAILS_PATH_URL\n    }${movieId}${this.#GET_REVIEWS_URL}`;\n\n    try {\n      const response = await axios.get(url, {\n        params: {\n          api_key: this.#API_KEY,\n          page: 1,\n        },\n      });\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n\nexport const apiService = new Api();\n"],"names":["CastList","styled","movieId","useParams","useState","cast","setCast","useEffect","apiService","actors","length","slice","console","log","getMovieCast","map","id","profile_path","character","original_name","src","alt","width","height","Api","url","this","axios","params","api_key","response","data","results","error","query","page"],"sourceRoot":""}